# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build_binary_x86:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: secretflow/release-ci:latest
    resource_class: 2xlarge+
    shell: /bin/bash --login -eo pipefail
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Kill the whole ci after 1hr
      - run:
          name: Cancel build after set time
          background: true
          command: |
            sleep 3600
            echo "Canceling workflow as too much time has elapsed"
            curl -X POST --header "Content-Type: application/json" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel?circle-token=${BUILD_TIMER_TOKEN}"
      - checkout
      - run:
          name: "Checkout devtools"
          command: git clone https://github.com/secretflow/devtools.git ../devtools
      - run:
          name: "Build"
          command: bazel build psi:main -c opt --config=linux-release --ui_event_filters=-info,-debug,-warning --jobs 20
      - run:
          name: "Copy binary"
          command: |
            mkdir -p /tmp/binary/x86
            cp bazel-bin/psi/main /tmp/binary/x86
      - persist_to_workspace:
          root: "/tmp/binary"
          paths:
            - "x86/main"
  build_binary_arm:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: secretflow/release-ci-aarch64:latest
    resource_class: arm.2xlarge
    shell: /bin/bash --login -eo pipefail
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Kill the whole ci after 1hr
      - run:
          name: Cancel build after set time
          background: true
          command: |
            sleep 3600
            echo "Canceling workflow as too much time has elapsed"
            curl -X POST --header "Content-Type: application/json" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel?circle-token=${BUILD_TIMER_TOKEN}"
      - checkout
      - run:
          name: "Checkout devtools"
          command: git clone https://github.com/secretflow/devtools.git ../devtools
      - run:
          name: "Build"
          command: bazel build psi:main -c opt --config=linux-release --ui_event_filters=-info,-debug,-warning --jobs 20
      - run:
          name: "Copy binary"
          command: |
            mkdir -p /tmp/binary/arm
            cp bazel-bin/psi/main /tmp/binary/arm
      - persist_to_workspace:
          root: "/tmp/binary"
          paths:
            - "arm/main"
  docker_image_publish:
    docker:
      - image: cimg/deploy:2023.06.1
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/binary
      - run:
          name: Build Docker image
          command: |
            # Build image
            cd docker

            source_file="../psi/version.h"
            PSI_VERSION_MAJOR=$(grep "#define PSI_VERSION_MAJOR" $source_file | cut -d' ' -f3)
            PSI_VERSION_MINOR=$(grep "#define PSI_VERSION_MINOR" $source_file | cut -d' ' -f3)
            PSI_VERSION_PATCH=$(grep "#define PSI_VERSION_PATCH" $source_file | cut -d' ' -f3)
            PSI_DEV_IDENTIFIER=$(grep "#define PSI_DEV_IDENTIFIER" $source_file | cut -d' ' -f3 | sed 's/"//g')

            TAG="${PSI_VERSION_MAJOR}.${PSI_VERSION_MINOR}.${PSI_VERSION_PATCH}${PSI_DEV_IDENTIFIER}"
            echo $TAG

            mkdir -p linux/amd64
            mkdir -p linux/arm64

            cp /tmp/binary/x86/main ./linux/amd64
            cp /tmp/binary/arm/main ./linux/arm64

            # login docker
            docker login -u secretflow -p ${DOCKER_DEPLOY_TOKEN}
            docker buildx create --name psi-image-builder --platform linux/arm64,linux/amd64 --use
            docker buildx build --platform linux/arm64,linux/amd64 -f Dockerfile -t secretflow/psi-anolis8:$TAG \
                    --build-arg version=$TAG --build-arg config_templates="$(cat config_templates.yml)" \
                    --build-arg deploy_templates="$(cat deploy_templates.yml)" --push .
            docker buildx build --platform linux/arm64,linux/amd64 -f Dockerfile -t secretflow/psi-anolis8:latest \
                    --build-arg version=$TAG --build-arg config_templates="$(cat config_templates.yml)" \
                    --build-arg deploy_templates="$(cat deploy_templates.yml)" --push .

            # login docker - aliyun
            docker login -u ${ALIYUN_DOCKER_USERNAME} -p ${ALIYUN_DOCKER_PASSWORD} secretflow-registry.cn-hangzhou.cr.aliyuncs.com

            docker buildx build --platform linux/arm64,linux/amd64 -f Dockerfile -t secretflow-registry.cn-hangzhou.cr.aliyuncs.com/secretflow/psi-anolis8:$TAG \
                  --build-arg version=$TAG --build-arg config_templates="$(cat config_templates.yml)" \
                  --build-arg deploy_templates="$(cat deploy_templates.yml)" --push .
            docker buildx build --platform linux/arm64,linux/amd64 -f Dockerfile -t secretflow-registry.cn-hangzhou.cr.aliyuncs.com/secretflow/psi-anolis8:latest \
                  --build-arg version=$TAG --build-arg config_templates="$(cat config_templates.yml)" \
                  --build-arg deploy_templates="$(cat deploy_templates.yml)" --push .

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  publish:
    jobs:
      - build_binary_x86
      - build_binary_arm
      - docker_image_publish:
          requires:
            - build_binary_x86
            - build_binary_arm
