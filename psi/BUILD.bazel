# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//bazel:psi.bzl", "psi_cc_binary", "psi_cc_library", "psi_cc_test")

package(default_visibility = ["//visibility:public"])

psi_cc_library(
    name = "prelude",
    hdrs = [
        "prelude.h",
    ],
    deps = [
        "//psi/proto:psi_cc_proto",
        "//psi/proto:psi_v2_cc_proto",
    ],
)

psi_cc_library(
    name = "interface",
    srcs = ["interface.cc"],
    hdrs = ["interface.h"],
    deps = [
        ":trace_categories",
        "//psi/legacy:bucket_psi",
        "//psi/proto:psi_v2_cc_proto",
        "//psi/utils:advanced_join",
        "//psi/utils:index_store",
        "//psi/utils:recovery",
        "@boost//:uuid",
        "@com_github_google_perfetto//:perfetto",
        "@com_google_absl//absl/status",
        "@yacl//yacl/link",
    ],
)

psi_cc_library(
    name = "factory",
    srcs = ["factory.cc"],
    hdrs = ["factory.h"],
    deps = [
        "//psi/ecdh:client",
        "//psi/ecdh:receiver",
        "//psi/ecdh:sender",
        "//psi/ecdh:server",
        "//psi/kkrt:receiver",
        "//psi/kkrt:sender",
        "//psi/rr22:receiver",
        "//psi/rr22:sender",
        "@yacl//yacl/base:exception",
    ],
)

psi_cc_library(
    name = "launch",
    srcs = ["launch.cc"],
    hdrs = ["launch.h"],
    deps = [
        ":factory",
        ":trace_categories",
        "//psi/legacy:bucket_psi",
        "@boost//:algorithm",
        "@boost//:uuid",
    ],
)

psi_cc_library(
    name = "trace_categories",
    srcs = ["trace_categories.cc"],
    hdrs = ["trace_categories.h"],
    deps = [
        "@com_github_google_perfetto//:perfetto",
    ],
)

psi_cc_test(
    name = "psi_test",
    srcs = ["psi_test.cc"],
    deps = [
        ":factory",
        "//psi/utils:arrow_csv_batch_provider",
        "@boost//:uuid",
        "@yacl//yacl/utils:scope_guard",
    ],
)

psi_cc_library(
    name = "version",
    hdrs = ["version.h"],
)

psi_cc_library(
    name = "kuscia_adapter",
    srcs = [
        "kuscia_adapter.cc",
    ],
    hdrs = [
        "kuscia_adapter.h",
    ],
    deps = [
        "//psi/proto:entry_cc_proto",
        "//psi/proto:kuscia_cc_proto",
        "@com_github_tencent_rapidjson//:rapidjson",
        "@yacl//yacl/base:exception",
    ],
)

psi_cc_test(
    name = "kuscia_adapter_test",
    srcs = ["kuscia_adapter_test.cc"],
    deps = [
        ":kuscia_adapter",
    ],
)

psi_cc_binary(
    name = "main",
    srcs = ["main.cc"],
    deps = [
        ":kuscia_adapter",
        ":version",
        "//psi:launch",
        "//psi/proto:entry_cc_proto",
        "@com_github_gflags_gflags//:gflags",
    ],
)
