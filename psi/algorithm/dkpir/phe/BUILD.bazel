# Copyright 2025
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_proto//proto:defs.bzl", "proto_library")
load("//bazel:psi.bzl", "psi_cc_binary", "psi_cc_library", "psi_cc_test")

package(default_visibility = ["//visibility:public"])

psi_cc_library(
  name = "phe",
  hdrs = ["phe.h"],
  deps = [
    ":ciphertext",
    ":encryptor",
    ":evaluator",
    ":key_generator",
    ":public_key",
    ":secret_key",
  ],
)

psi_cc_library(
  name = "evaluator",
  srcs = ["evaluator.cc"],
  hdrs = ["evaluator.h"],
  deps = [
    ":ciphertext",
    ":secret_key",
  ]
)

psi_cc_library(
  name = "encryptor",
  srcs = ["encryptor.cc"],
  hdrs = ["encryptor.h"],
  deps = [
    ":ciphertext",
    ":public_key",
  ],
)

psi_cc_library(
  name = "secret_key",
  hdrs = ["secret_key.h"],
  deps = [
    "@yacl//yacl/crypto/ecc:spi",
  ],
)

psi_cc_library(
  name = "public_key",
  hdrs = ["public_key.h"],
  deps = [
    "@yacl//yacl/crypto/ecc:spi",
  ],
)

psi_cc_library(
  name = "ciphertext",
  srcs = ["ciphertext.cc"],
  hdrs = ["ciphertext.h"],
  deps = [
    "@yacl//yacl/crypto/ecc:ec_point",
    "@yacl//yacl/crypto/ecc:spi",
  ],
)

psi_cc_library(
  name = "key_generator",
  srcs = ["key_generator.cc"],
  hdrs = ["key_generator.h"],
  deps = [
    ":secret_key",
    ":public_key",
  ],
)

psi_cc_test(
  name = "phe_test",
  srcs = ["phe_test.cc"],
  defines = [
      "__LINUX__",
  ] + select({
      "@bazel_tools//src/conditions:linux_x86_64": [
          "_AMD64_",
          "_ASM_",
      ],
      "@bazel_tools//src/conditions:darwin_arm64": [
          "_ARM64_",
      ],
      "//conditions:default": [
          "_AMD64_",
      ],
  }),
  deps = [
    ":phe",
    "@yacl//yacl/crypto/ecc/FourQlib",
    "@com_google_googletest//:gtest",
    "@yacl//yacl/crypto/rand:rand",
  ],
)