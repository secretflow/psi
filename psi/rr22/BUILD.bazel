# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@yacl//bazel:yacl.bzl", "AES_COPT_FLAGS")
load("//bazel:psi.bzl", "psi_cc_binary", "psi_cc_library", "psi_cc_test")

package(default_visibility = ["//visibility:public"])

psi_cc_library(
    name = "davis_meyer_hash",
    srcs = ["davis_meyer_hash.cc"],
    hdrs = ["davis_meyer_hash.h"],
    copts = AES_COPT_FLAGS,
    deps = [
        "@yacl//yacl/crypto/aes:aes_opt",
        "@yacl//yacl/crypto/block_cipher:symmetric_crypto",
        "@yacl//yacl/utils:platform_utils",
    ],
)

psi_cc_test(
    name = "davis_meyer_hash_test",
    srcs = ["davis_meyer_hash_test.cc"],
    deps = [
        ":davis_meyer_hash",
        "@yacl//yacl/crypto/rand",
        "@yacl//yacl/crypto/tools:prg",
    ],
)

psi_cc_library(
    name = "rr22_oprf",
    srcs = ["rr22_oprf.cc"],
    hdrs = ["rr22_oprf.h"],
    deps = [
        ":davis_meyer_hash",
        "//psi/rr22/okvs:aes_crhash",
        "//psi/rr22/okvs:baxos",
        "@yacl//yacl/base:buffer",
        "@yacl//yacl/crypto/rand",
        "@yacl//yacl/crypto/tools:prg",
        "@yacl//yacl/crypto/tools:ro",
        "@yacl//yacl/kernel/algorithms:silent_vole",
        "@yacl//yacl/link",
        "@yacl//yacl/math/f2k",
        "@yacl//yacl/utils:parallel",
    ],
)

psi_cc_test(
    name = "rr22_oprf_test",
    srcs = ["rr22_oprf_test.cc"],
    deps = [
        ":rr22_oprf",
        "//psi/utils:test_utils",
    ],
)

psi_cc_library(
    name = "sparsehash_config",
    hdrs = ["sparseconfig.h"],
    include_prefix = "sparsehash/internal",
    visibility = ["//visibility:public"],
)

psi_cc_library(
    name = "rr22_utils",
    srcs = ["rr22_utils.cc"],
    hdrs = ["rr22_utils.h"],
    deps = [
        "//psi/rr22/okvs:galois128",
        "//psi/rr22/okvs:simple_index",
        "@com_github_ridiculousfish_libdivide//:libdivide",
        "@com_github_sparsehash_sparsehash//:sparsehash",
        "@yacl//yacl/base:buffer",
        "@yacl//yacl/base:int128",
        "@yacl//yacl/link",
    ],
)

psi_cc_library(
    name = "rr22_psi",
    srcs = ["rr22_psi.cc"],
    hdrs = ["rr22_psi.h"],
    deps = [
        ":rr22_oprf",
        ":rr22_utils",
        "//psi/utils:sync",
    ],
)

psi_cc_test(
    name = "rr22_psi_test",
    srcs = ["rr22_psi_test.cc"],
    deps = [
        ":rr22_psi",
        "@yacl//yacl/crypto/rand",
    ],
)

psi_cc_binary(
    name = "rr22_psi_benchmark",
    srcs = ["rr22_psi_benchmark.cc"],
    deps = [
        ":rr22_psi",
        "//psi/utils:test_utils",
        "@com_github_google_benchmark//:benchmark_main",
        "@yacl//yacl/crypto/rand",
    ],
)

psi_cc_library(
    name = "common",
    srcs = ["common.cc"],
    hdrs = ["common.h"],
    deps = [
        ":rr22_psi",
        "//psi/proto:psi_v2_cc_proto",
        "//psi/utils:bucket",
        "//psi/utils:recovery",
    ],
)

psi_cc_library(
    name = "receiver",
    srcs = ["receiver.cc"],
    hdrs = ["receiver.h"],
    deps = [
        ":common",
        "//psi:interface",
        "//psi/utils:arrow_csv_batch_provider",
    ],
)

psi_cc_library(
    name = "sender",
    srcs = ["sender.cc"],
    hdrs = ["sender.h"],
    deps = [
        ":common",
        "//psi:interface",
        "//psi/utils:arrow_csv_batch_provider",
    ],
)
